'''
model - ORM - объект реально связанный с БД (object related model)
'''

from sqlalchemy import Column, ForeignKey, Integer, CHAR, VARCHAR, DATETIME, BOOLEAN, TIMESTAMP, func
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship  # high level data access for related tables
import uuid


Base = declarative_base()

# common ploes for each class - AUTOGENERATED poles
class CommonModel(Base):
    __abstract__ = True   # Class will not create table - just tamplate for other tables
    id = Column(CHAR(36), default=uuid.uuid4, primary_key=True)
    created_at = Column(TIMESTAMP, default=func.now())       # func - use some sql-function from database   
    updated_at = Column(TIMESTAMP, default=func.now(), onupdate=func.now())

class Group(CommonModel):
    __tablename__ = 'Group'
    name = Column(CHAR(32), nullable=False)
    students_count = Column(Integer, default=0)
    email = Column(VARCHAR(128))


class Student(CommonModel):
    __tablename__ = 'Student'
    group_id = Column(CHAR(36), ForeignKey('Group.id')) 
    full_name = Column(CHAR(128), nullable=False)

    # High level abstraction to easy data accessing
    # now Group of student (same group_id) accessed directly from this pole (when accessing - makes sql query)
    group = relationship('Group') # unidirectional relation as example
    

class Task(CommonModel):
    __tablename__ = 'Task'
    task_id = Column(CHAR(36), primary_key=True)
    task_name = Column(CHAR(32), nullable=False)
    answer = Column(BOOLEAN)
    answered_at = Column(DATETIME)

